#!/usr/bin/env sh
set -u
type curl > /dev/null || { echo "curl: not found"; exit 1; }

repo='navi-language/navi'

# request github api, and check if the response is ok
fetch_github_api() {
  url="$1"
  curl --silent --fail "$url" || { echo "Failed to fetch $url"; exit 1; }
}

get_latest_release() {
  fetch_github_api "https://api.github.com/repos/$repo/releases/latest" | # Get latest release from GitHub api
    grep '"tag_name":' |                                               # Get tag line
    sed -E 's/.*"([^"]+)".*/\1/'                                       # Pluck JSON value
}

get_last_nightly_release() {
  fetch_github_api "https://api.github.com/repos/$repo/releases" | # Get latest release from GitHub api
    grep '"tag_name":' |                                               # Get tag line
    sed -E 's/.*"([^"]+)".*/\1/' |                                       # Pluck JSON value
    grep "nightly" | head -n 1
}

app_name='Navi'
bin_name='navi'
tmpdir=.tmp_install

# if args has version override it and not eq "latest"
if test $# -eq 1; then
  if test "$1" = "nightly"; then
    # curl -sSL https://navi-lang.org/install | sh -s -- nightly
    version=$(get_last_nightly_release)
  elif test "$1" != "latest"; then
    # curl -sSL https://navi-lang.org/install | sh -s -- v0.9.0-nightly
    version="$1"
  fi
else
  # curl -sSL https://navi-lang.org/install | sh
  version=$(get_latest_release)
fi

# if version is empty, exit
if test -z "$version"; then
  echo "No release version found"
  exit 1
fi

platform="$(uname | tr "[A-Z]" "[a-z]")"  # Linux => linux
arch="$(uname -m | sed 's/x86_64/amd64/')"  # x86_64 => amd64

if [ "$platform" = "darwin" ]; then
	platform="darwin"
fi

echo "Downloading $bin_name@$version ..."

libc=''
# if ldd --version 2>&1 | grep -q 'musl'; then
#   libc='-musl'
# fi

download_url=https://github.com/$repo/releases/download/$version/$bin_name-$platform$libc-$arch.tar.gz
echo $download_url

mkdir -p $tmpdir && cd $tmpdir
curl -Lo $bin_name.tar.gz $download_url
tar zxf $bin_name.tar.gz

if test $(id -u) -eq 0; then
mv $bin_name /usr/local/bin/$bin_name
else
sudo mv $bin_name /usr/local/bin/$bin_name
fi

rm $bin_name.tar.gz
cd ..
rm -Rf $tmpdir

echo "$app_name $version has installed successfully."
echo ""
echo "You can use `$bin_name -h` to get help."
echo ""
