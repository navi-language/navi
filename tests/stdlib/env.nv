use std.env;

test "get" {
  let val = env.get("PATH");
  assert val.len() > 0;
}

test "set" {
  assert_eq env.get("NAVI_TEST_ENV_VAR"), nil;

  env.set("NAVI_TEST_ENV_VAR", "hello123");
  assert_eq env.get("NAVI_TEST_ENV_VAR"), "hello123";

  env.set("NAVI_TEST_ENV_VAR", "HELLO123");
  assert_eq env.get("NAVI_TEST_ENV_VAR"), "HELLO123";

  env.remove("NAVI_TEST_ENV_VAR");
  assert_eq env.get("NAVI_TEST_ENV_VAR"), nil;
}

test "expand" {
  let val = env.expand("$PATH");
  assert val.len() > 0;

  env.set("NAVI_TEST_ENV_VAR", "OK");
  assert_eq env.expand("$NAVI_TEST_ENV_VAR haha $NAVI_TEST_ENV_VAR."), "OK haha OK.";
  assert_eq env.expand("${NAVI_TEST_ENV_VAR} haha ${NAVI_TEST_ENV_VAR}."), "OK haha OK.";
}

test "tmpdir" {
  let tmpdir = env.tmpdir();
  assert tmpdir.len() > 0;
}

test "platform" {
  let platform = env.platform();
  assert platform.len() > 0;
}

test "arch" {
  let arch = env.arch();
  assert arch.len() > 0;
}
