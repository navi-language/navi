use std.net.http.{Request, multipart};
use test_harness;
use std.json;

struct ResponseInfo {
    url: string,
    method: string,
    data: string,
    args: <string, string>,
    headers: <string, string>
}

test "request set_form" {
    let server = test_harness.start_http_server();
    let form = <string, string> { "foo": "bar", "message": "Hello, 世界!" };
    let req = Request.new(method: "POST", url: server.url("/post"));
    req.set_form(form);

    let res = try req.send();
    assert_eq res.status(), 200;

    let body = try res.json::<ResponseInfo>();

    assert_eq body.headers["content-type"], "application/x-www-form-urlencoded";
    assert_eq body.data, "foo=bar&message=Hello%2C+%E4%B8%96%E7%95%8C%21";
}

test "new_request with form optional" {
    let server = test_harness.start_http_server();
    let form = <string, string> { "foo": "bar", "message": "Hello, 世界!" };
    let req = Request.new(method: "POST", url: server.url("/post"), form: form);

    let res = try req.send();
    assert_eq res.status(), 200;

    let body = try res.json::<ResponseInfo>();

    assert_eq body.headers["content-type"], "application/x-www-form-urlencoded";
    assert_eq body.data, "foo=bar&message=Hello%2C+%E4%B8%96%E7%95%8C%21";
}
