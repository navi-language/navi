test "to_string" {
    let d = 15.5.minutes();
    assert_eq d.to_string(), "930s";
    let d = 1.5.minutes();
    assert_eq d.to_string(), "90s";
    let d = 0.5.minutes();
    assert_eq d.to_string(), "30s";
    let d = 59.5.seconds();
    assert_eq d.to_string(), "59.5s";
    let d = 2.35.seconds();
    assert_eq d.to_string(), "2.35s";
    let d = 0.25.seconds();
    assert_eq d.to_string(), "250ms";
    let d = 0.25.milliseconds();
    assert_eq d.to_string(), "250Âµs";
    let d = 0.25.microseconds();
    assert_eq d.to_string(), "250ns";
}

test "Duration - string_interpolation" {
    let d = 15.5.minutes();
    assert_eq `{d}`, "930s";
    let d = 25.5.seconds();
    assert_eq `{d}`, "25.5s";
}

test "days" {
    let d = 2.5.days();
    assert_eq d.days(), 2.5;
    assert_eq d.hours(), 60.0;

    let d = (-2.5).days();
    assert_eq d.days(), -2.5;
    assert_eq d.hours(), -60.0;

    let d = 7.days();
    assert_eq d.days(), 7.0;
    assert_eq d.hours(), 168.0;

    let d = (-7).days();
    assert_eq d.days(), -7.0;
    assert_eq d.hours(), -168.0;
}

test "hours" {
    let d = 1.5.hours();
    assert_eq d.hours(), 1.5;
    assert_eq d.minutes(), 90.0;

    let d = (-1.5).hours();
    assert_eq d.hours(), -1.5;
    assert_eq d.minutes(), -90.0;

    let d = 2.hours();
    assert_eq d.hours(), 2.0;
    assert_eq d.minutes(), 120.0;

    let d = (-2).hours();
    assert_eq d.hours(), -2.0;
    assert_eq d.minutes(), -120.0;
}

test "minutes" {
    let d = 1.5.minutes();
    assert_eq d.minutes(), 1.5;
    assert_eq d.seconds(), 90.0;

    let d = (-1.5).minutes();
    assert_eq d.minutes(), -1.5;

    let d = 1.minutes();
    assert_eq d.minutes(), 1.0;
    assert_eq d.seconds(), 60.0;

    let d = (-1).minutes();
    assert_eq d.minutes(), -1.0;
    assert_eq d.seconds(), -60.0;
}

test "seconds" {
    let d = 1.5.seconds();
    assert_eq d.minutes(), 0.025;
    assert_eq d.seconds(), 1.5;

    let d = (-1.5).seconds();
    assert_eq d.minutes(), -0.025;
    assert_eq d.seconds(), -1.5;

    let d = 30.seconds();
    assert_eq d.minutes(), 0.5;
    assert_eq d.seconds(), 30.0;

    let d = (-30).seconds();
    assert_eq d.minutes(), -0.5;
    assert_eq d.seconds(), -30.0;
}

test "milliseconds" {
    let d = 1.5.milliseconds();
    assert_eq d.seconds(), 0.0015;
    assert_eq d.milliseconds(), 1;
    assert_eq d.microseconds(), 1500;
    assert_eq d.nanoseconds(), 1500000;

    let d = (-1.5).milliseconds();
    assert_eq d.seconds(), -0.0015;
    assert_eq d.milliseconds(), -1;
    assert_eq d.microseconds(), -1500;

    let d = 2.milliseconds();
    assert_eq d.seconds(), 0.002;
    assert_eq d.milliseconds(), 2;
    assert_eq d.microseconds(), 2000;
    assert_eq d.nanoseconds(), 2000000;

    let d = (-2).milliseconds();
    assert_eq d.seconds(), -0.002;
    assert_eq d.milliseconds(), -2;
    assert_eq d.microseconds(), -2000;
}

test "microseconds" {
    let d = 1.5.microseconds();
    assert_eq d.seconds(), 0.0000015;
    assert_eq d.milliseconds(), 0;
    assert_eq d.microseconds(), 1;
    assert_eq d.nanoseconds(), 1500;

    let d = (-1.5).microseconds();
    assert_eq d.seconds(), -0.0000015;
    assert_eq d.milliseconds(), 0;
    assert_eq d.microseconds(), -1;
    assert_eq d.nanoseconds(), -1500;

    let d = 2.microseconds();
    assert_eq d.seconds(), 0.000002;
    assert_eq d.milliseconds(), 0;
    assert_eq d.microseconds(), 2;
    assert_eq d.nanoseconds(), 2000;

    let d = (-2).microseconds();
    assert_eq d.seconds(), -0.000002;
    assert_eq d.milliseconds(), 0;
    assert_eq d.microseconds(), -2;
    assert_eq d.nanoseconds(), -2000;
}

test "nanoseconds" {
    let d = 1.5.nanoseconds();
    assert_eq d.seconds(), 0.000000001;
    assert_eq d.milliseconds(), 0;
    assert_eq d.microseconds(), 0;
    assert_eq d.nanoseconds(), 1;

    let d = (-1.5).nanoseconds();
    assert_eq d.seconds(), -0.000000001;
    assert_eq d.milliseconds(), 0;
    assert_eq d.microseconds(), 0;
    assert_eq d.nanoseconds(), -1;

    let d = 2.nanoseconds();
    assert_eq d.seconds(), 0.000000002;
    assert_eq d.milliseconds(), 0;
    assert_eq d.microseconds(), 0;
    assert_eq d.nanoseconds(), 2;

    let d = (-2).nanoseconds();
    assert_eq d.seconds(), -0.000000002;
    assert_eq d.milliseconds(), 0;
    assert_eq d.microseconds(), 0;
    assert_eq d.nanoseconds(), -2;

    let d = 3153600000000000000.nanoseconds();
    assert_eq d.minutes(), 52560000.0;
    assert_eq d.seconds(), 3153600000.0;
    assert_eq d.milliseconds(), 3153600000000;
}

test "eq" {
    let a = 1.seconds();
    assert_ne a, 2.seconds();
    assert_eq a, 1.seconds();
    assert_eq a, 1000.milliseconds();

    let a = 3.1415.seconds();
    assert_ne a, 3.141592.seconds();
    assert_ne a, 2.seconds();
    assert_eq a, 3.1415.seconds();
    assert_eq a, 3141.5.milliseconds();

    let a = 1.5.minutes();
    assert_ne a, 2.minutes();
    assert_eq a, 1.5.minutes();
    assert_eq a, 90.seconds();

    let a = 320.milliseconds();
    assert_ne a, 321.milliseconds();
    assert_eq a, 320.milliseconds();
    assert_eq a, 0.32.seconds();
}

test "+ & -" {
    assert_eq 1.seconds() + 1.seconds(), 2.seconds();
    assert_eq 1.seconds() + 2.seconds(), 3.seconds();
    assert_eq 1.minutes() + 15.seconds(), 75.seconds();
    assert_eq 1.minutes() + 15.seconds() + 1.seconds(), 76.seconds();
    assert_eq 2.5.seconds() + 1.seconds() + 100.milliseconds() + 55.nanoseconds(), 3.600000055.seconds();
    
    assert_eq 1.hours() - 15.minutes(), 45.minutes();
    assert_eq 1.5.hours() - 15.minutes() - 1.minutes(), 74.minutes();
}